<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
                           http://www.springframework.org/schema/security
                           http://www.springframework.org/schema/security/spring-security-4.1.xsd">

<!-- Se especifica la ruta del archivo que tendra los datos de la conexión a la BD,
     en este caso el archivo se llama database.properties y se encuentra dentro de 
     la carpeta WEB-INF -->
     <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" p:location="/WEB-INF/database.properties"/>

    <!--  Bean que realiza la conexión a la BD usando la informacion de database.properties-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"
        p:driverClassName="${jdbc.driverClassName}"
        p:url="${jdbc.url}"
        p:username="${jdbc.username}"
        p:password="${jdbc.password}"/>
    
    <bean id="hibernate4AnnotatedSessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="annotatedClasses">
            <list>
                <!--Clases para el mapeo-->
                <value>Mapeo.Candidato</value>
                <value>Mapeo.Cliente</value>
                <value>Mapeo.Empleado</value>
                <value>Mapeo.Persona</value>
                <value>Mapeo.Pertenecer</value>
                <value>Mapeo.Proyecto</value>
                <value>Mapeo.Respuesta</value>
                <value>Mapeo.Tipo</value>
                <value>Mapeo.Usuario</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.format_sql">false</prop>
            </props>
        </property>
    </bean>
    
    <!--  Se agrega para poder inyectarlo a los Controladores, revisa EjemploController.java
          en el paquete controlador, se esta haciendo uso de @Autowiring-->
    <!--Ejemplo para configurar bean-->
    <bean id="ClienteDAO" class="Modelo.ClienteDAO" p:sessionFactory-ref="hibernate4AnnotatedSessionFactory"/>
    <bean id="PersonaDAO" class="Modelo.PersonaDAO" p:sessionFactory-ref="hibernate4AnnotatedSessionFactory"/>
    <bean id="UsuarioDAO" class="Modelo.UsuarioDAO" p:sessionFactory-ref="hibernate4AnnotatedSessionFactory"/>

    <!-- SpringSecurity -->

    <security:http pattern="/css/*" security="none"/>
    <security:http pattern="/imagenes/*" security="none"/>
    <security:http pattern="/js/*" security="none"/>
    
    <security:http auto-config='true'>
        <security:intercept-url pattern="/" access="permitAll" />
        <security:intercept-url pattern="/admin/*" access="hasRole('ADMIN')" />
        <security:intercept-url pattern="/**" 
                                access="hasAnyRole('CLIENTE','EMPLEADO','ADMIN')" />
        <security:form-login login-page="/"
                             authentication-failure-url="/?login_error=1"
                             default-target-url="/home"
                             always-use-default-target="true"/>
        <security:csrf disabled="true"/>
        <security:access-denied-handler error-page="/error403" />
        <security:logout logout-success-url="/"
                         delete-cookies="JSESSIONID"/>
    </security:http>
    
    <security:authentication-manager>
        <security:authentication-provider>
            <security:password-encoder hash="bcrypt" />
            <security:jdbc-user-service data-source-ref="dataSource" 
             users-by-username-query= "select p.correo,u.contrasenia,1 from persona p inner join usuario u  on (p.idPersona = u.idPersona) where  p.correo = ?;"
             authorities-by-username-query="select p.correo,u.rol from persona p inner join usuario u  on (p.idPersona = u.idPersona) where  p.correo = ?;"
            />
        </security:authentication-provider>
    </security:authentication-manager>

    <!-- SpringSecurity -->
    
</beans>
